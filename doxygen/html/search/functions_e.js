var searchData=
[
  ['sanitycheck_645',['sanityCheck',['../classDCEL_1_1MeshT.html#af08266c1b2c03cb5bc2cbdb7fd13b9a1',1,'DCEL::MeshT']]],
  ['scale_646',['Scale',['../EBGeometry__Transform_8hpp.html#a701474a26e7d1e88da235edcb0c5847f',1,'EBGeometry_Transform.hpp']]],
  ['scaleif_647',['ScaleIF',['../classScaleIF.html#a8cd39a3aa2e38241491fc1524f246efa',1,'ScaleIF::ScaleIF()=delete'],['../classScaleIF.html#a63e83e327eb81329a8bf60b03c5105f4',1,'ScaleIF::ScaleIF(const std::shared_ptr&lt; ImplicitFunction&lt; T &gt;&gt; &amp;a_implicitFunction, const T a_scale) noexcept']]],
  ['setboundingvolume_648',['setBoundingVolume',['../classBVH_1_1LinearNodeT.html#a03e3dd1c74bf9e66ed692130b49c2e0f',1,'BVH::LinearNodeT']]],
  ['setchildoffset_649',['setChildOffset',['../classBVH_1_1LinearNodeT.html#a1bdc4afa4b52b8592bb19b5da29a4352',1,'BVH::LinearNodeT']]],
  ['setedge_650',['setEdge',['../classDCEL_1_1VertexT.html#acaf52648b3a2cd0dcdf0984f6ad63514',1,'DCEL::VertexT']]],
  ['setface_651',['setFace',['../classDCEL_1_1EdgeT.html#aed89e0450331d54b98c857fc25f0a38c',1,'DCEL::EdgeT']]],
  ['sethalfedge_652',['setHalfEdge',['../classDCEL_1_1FaceT.html#a35f92e48ed1633e379f30f36886061b2',1,'DCEL::FaceT']]],
  ['setinsideoutsidealgorithm_653',['setInsideOutsideAlgorithm',['../classDCEL_1_1FaceT.html#a0c7794b9517c3de3d239d6776aad5bf6',1,'DCEL::FaceT::setInsideOutsideAlgorithm()'],['../classDCEL_1_1MeshT.html#ac1b8ee0222585435f7ae678de337e3b1',1,'DCEL::MeshT::setInsideOutsideAlgorithm()']]],
  ['setnextedge_654',['setNextEdge',['../classDCEL_1_1EdgeT.html#afcedb51849b8a2976a689b5d41591d5c',1,'DCEL::EdgeT']]],
  ['setnormal_655',['setNormal',['../classDCEL_1_1VertexT.html#abcaa942a7881bf20082addb2361b52f9',1,'DCEL::VertexT']]],
  ['setnumprimitives_656',['setNumPrimitives',['../classBVH_1_1LinearNodeT.html#a0246e43510fbb92c08e966af346f87c6',1,'BVH::LinearNodeT']]],
  ['setpairedge_657',['setPairEdge',['../classDCEL_1_1EdgeT.html#a91b996c2569dfea4689508f6038226aa',1,'DCEL::EdgeT']]],
  ['setposition_658',['setPosition',['../classDCEL_1_1VertexT.html#a724d755b487126bf0cbad611e1d6cb57',1,'DCEL::VertexT']]],
  ['setprimitivesoffset_659',['setPrimitivesOffset',['../classBVH_1_1LinearNodeT.html#abdaf7f92d0fce2cc85d4f83dd80bced0',1,'BVH::LinearNodeT']]],
  ['setsearchalgorithm_660',['setSearchAlgorithm',['../classDCEL_1_1MeshT.html#a8104f9cbe49b8295637ac568a28082a5',1,'DCEL::MeshT']]],
  ['setvertex_661',['setVertex',['../classDCEL_1_1EdgeT.html#ab439e26a598ae3337ae2b69285059667',1,'DCEL::EdgeT']]],
  ['signeddistance_662',['signedDistance',['../classSignedDistanceFunction.html#af5912280ca51dc21a2d6949a30ec7d21',1,'SignedDistanceFunction::signedDistance()'],['../classFastCompactMeshSDF.html#a8b0cf75bd0c87ccf1b992e2035cd3749',1,'FastCompactMeshSDF::signedDistance()'],['../classFastMeshSDF.html#a371fa42949f9af13a047b2ef7808e3ea',1,'FastMeshSDF::signedDistance()'],['../classMeshSDF.html#a6fe9fb2386bdb0073d3c6e9f4ade41e8',1,'MeshSDF::signedDistance()'],['../classDCEL_1_1VertexT.html#ac45b8a4c1b815ab0333f1c2fb8fa694d',1,'DCEL::VertexT::signedDistance()'],['../classDCEL_1_1MeshT.html#a9f5c30f5e07f73434d03c469c1065401',1,'DCEL::MeshT::signedDistance(const Vec3 &amp;a_x0, SearchAlgorithm a_algorithm) const noexcept'],['../classDCEL_1_1MeshT.html#ad8c8f39eaf7a1c2e027584359d25ff59',1,'DCEL::MeshT::signedDistance(const Vec3 &amp;a_x0) const noexcept'],['../classDCEL_1_1FaceT.html#a8aa0f9247ab0cc737a90bad13ed32a9c',1,'DCEL::FaceT::signedDistance()'],['../classDCEL_1_1EdgeT.html#a18ff0a6a6ff7ddfda2d2e5c67268e590',1,'DCEL::EdgeT::signedDistance()'],['../classConeSDF.html#a4ef38df98e9831c25297cb93a5b41da5',1,'ConeSDF::signedDistance()'],['../classPlaneSDF.html#a75c2d73156caac10eefce9b431542d88',1,'PlaneSDF::signedDistance()'],['../classRoundedBoxSDF.html#ae8b57dc86dcd306f306e1896c66d4326',1,'RoundedBoxSDF::signedDistance()'],['../classSphereSDF.html#a9b0c5f0b1af2c4b62bee1c873e0158e8',1,'SphereSDF::signedDistance()'],['../classBoxSDF.html#a6e7a72790061423e5c9ea47d9e26736f',1,'BoxSDF::signedDistance()'],['../classTorusSDF.html#a23b4d455de2b7b9988ce81833ccd5302',1,'TorusSDF::signedDistance()'],['../classCylinderSDF.html#a082c08089b07402d55020ed8186cc992',1,'CylinderSDF::signedDistance()'],['../classInfiniteCylinderSDF.html#a2481e68ea21c304c858878ae1d7fc031',1,'InfiniteCylinderSDF::signedDistance()'],['../classCapsuleSDF.html#a2fa33052a5d93eb0f7fb0a6ff32122e9',1,'CapsuleSDF::signedDistance()'],['../classInfiniteConeSDF.html#a98232920c669d548b84493d9e55ddc0a',1,'InfiniteConeSDF::signedDistance()']]],
  ['signeddistancefunction_663',['SignedDistanceFunction',['../classSignedDistanceFunction.html#abfeeff9b3901e03ec6b73317dc9a722e',1,'SignedDistanceFunction']]],
  ['size_664',['size',['../classDCEL_1_1EdgeT.html#adccea85a8ade704add694fa6d439dc86',1,'DCEL::EdgeT']]],
  ['smoothdifference_665',['SmoothDifference',['../EBGeometry__CSG_8hpp.html#a59e14e6d19f2b4a9844ef26ad3c5db2e',1,'EBGeometry_CSG.hpp']]],
  ['smoothdifferenceif_666',['SmoothDifferenceIF',['../classSmoothDifferenceIF.html#a21c871b74c9a3839fcd676d2e1c7e0d6',1,'SmoothDifferenceIF::SmoothDifferenceIF()=delete'],['../classSmoothDifferenceIF.html#aeaaf5d31ec9265e21999193902d87250',1,'SmoothDifferenceIF::SmoothDifferenceIF(const std::shared_ptr&lt; ImplicitFunction&lt; T &gt;&gt; &amp;a_implicitFunctionA, const std::shared_ptr&lt; ImplicitFunction&lt; T &gt;&gt; &amp;a_implicitFunctionB, const T a_smoothLen, const std::function&lt; T(const T &amp;a, const T &amp;b, const T &amp;s)&gt; &amp;a_smoothMax=smoothMax&lt; T &gt;) noexcept'],['../classSmoothDifferenceIF.html#aa2af073d9054762ba62e4ed1b1dfa562',1,'SmoothDifferenceIF::SmoothDifferenceIF(const std::shared_ptr&lt; ImplicitFunction&lt; T &gt;&gt; &amp;a_implicitFunctionA, const std::vector&lt; std::shared_ptr&lt; ImplicitFunction&lt; T &gt;&gt;&gt; &amp;a_implicitFunctionsB, const T a_smoothLen, const std::function&lt; T(const T &amp;a, const T &amp;b, const T &amp;s)&gt; &amp;a_smoothMax=smoothMax&lt; T &gt;) noexcept']]],
  ['smoothintersection_667',['SmoothIntersection',['../EBGeometry__CSG_8hpp.html#a31e4079fd5d60ead64b3eefe7e6a6b2f',1,'SmoothIntersection(const std::shared_ptr&lt; P1 &gt; &amp;a_implicitFunctionA, const std::shared_ptr&lt; P2 &gt; &amp;a_implicitFunctionB, const T a_smooth) noexcept:&#160;EBGeometry_CSG.hpp'],['../EBGeometry__CSG_8hpp.html#a48bdc4adc87a547195ccb6987de6f6c2',1,'SmoothIntersection(const std::vector&lt; std::shared_ptr&lt; P &gt;&gt; &amp;a_implicitFunctions, const T a_smooth) noexcept:&#160;EBGeometry_CSG.hpp']]],
  ['smoothintersectionif_668',['SmoothIntersectionIF',['../classSmoothIntersectionIF.html#a64aa487c53f256d0ef2592dcf0724828',1,'SmoothIntersectionIF::SmoothIntersectionIF()=delete'],['../classSmoothIntersectionIF.html#a33718954d732edfebb5d95f2413e4193',1,'SmoothIntersectionIF::SmoothIntersectionIF(const std::vector&lt; std::shared_ptr&lt; ImplicitFunction&lt; T &gt;&gt;&gt; &amp;a_implicitFunctions, const T a_smoothLen, const std::function&lt; T(const T &amp;a, const T &amp;b, const T &amp;s)&gt; &amp;a_smoothMax=smoothMax&lt; T &gt;) noexcept'],['../classSmoothIntersectionIF.html#a984cf95c76f60075b76fb9d313873eba',1,'SmoothIntersectionIF::SmoothIntersectionIF(const std::shared_ptr&lt; ImplicitFunction&lt; T &gt;&gt; &amp;a_implicitFunctionA, const std::shared_ptr&lt; ImplicitFunction&lt; T &gt;&gt; &amp;a_implicitFunctionB, const T a_smoothLen, const std::function&lt; T(const T &amp;a, const T &amp;b, const T &amp;s)&gt; &amp;a_smoothMax=smoothMax&lt; T &gt;) noexcept']]],
  ['smoothunion_669',['SmoothUnion',['../EBGeometry__CSG_8hpp.html#ae60c7e34d1ad34ee2d75f48480e58fd7',1,'SmoothUnion(const std::vector&lt; std::shared_ptr&lt; P &gt;&gt; &amp;a_implicitFunctions, const T a_smooth) noexcept:&#160;EBGeometry_CSG.hpp'],['../EBGeometry__CSG_8hpp.html#a5a8dd7e226e420c4268e101d859fbc29',1,'SmoothUnion(const std::shared_ptr&lt; P1 &gt; &amp;a_implicitFunctionA, const std::shared_ptr&lt; P2 &gt; &amp;a_implicitFunctionB, const T a_smooth) noexcept:&#160;EBGeometry_CSG.hpp']]],
  ['smoothunionif_670',['SmoothUnionIF',['../classSmoothUnionIF.html#ae6f01e7a5f6b576045b9b294e49fd0f9',1,'SmoothUnionIF::SmoothUnionIF(const std::vector&lt; std::shared_ptr&lt; ImplicitFunction&lt; T &gt;&gt;&gt; &amp;a_implicitFunctions, const T a_smoothLen, const std::function&lt; T(const T &amp;a, const T &amp;b, const T &amp;s)&gt; a_smoothMin=smoothMin&lt; T &gt;) noexcept'],['../classSmoothUnionIF.html#a61244781a492e884d650c689fd886173',1,'SmoothUnionIF::SmoothUnionIF()=delete']]],
  ['spheresdf_671',['SphereSDF',['../classSphereSDF.html#ad5f6d20f6ccd77ba91c00acd2aeea28f',1,'SphereSDF::SphereSDF()=delete'],['../classSphereSDF.html#abfe0f286ae77c3f0719214aeaf9a8c3a',1,'SphereSDF::SphereSDF(const Vec3T&lt; T &gt; &amp;a_center, const T &amp;a_radius)'],['../classSphereSDF.html#a2c25f14a19fcb910cd4d48af7123185a',1,'SphereSDF::SphereSDF(const SphereSDF &amp;a_other)']]]
];
